package com.hoaxify.ws.user;


import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.hoaxify.ws.error.ApiError;
import com.hoaxify.ws.shared.GenericResponse;

@RestController
public class UserController {
	
	@Autowired
	UserService userService;
	
	
	@PostMapping("/api/1.0/users")
//	@ResponseStatus(HttpStatus.CREATED)
	public ResponseEntity<?> createUser(@RequestBody User user) {
		String username = user.getUsername();
		String displayname = user.getDisplayName();
		ApiError error = new ApiError(400, "Validation Error", "/api/1.0/users");
		Map<String, String> validationErrors = new HashMap<>();
		
		if(username == null || username.isEmpty()) {
			validationErrors.put("username", "Username cannot be null");
			error.setValidationErrors(validationErrors);
		}
		
		if(displayname == null || displayname.isEmpty()) {
			validationErrors.put("displayname", "displayname cannot be null");
			error.setValidationErrors(validationErrors);
		}
		if(validationErrors.size()>0) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(error); //.build vardÄ± api error yokken
		}
		userService.save(user);
		return ResponseEntity.ok(new GenericResponse("user created")); // alternatifi 
//		GenericResponse response = new GenericResponse("user created");
//		return response;
		
	}

}
